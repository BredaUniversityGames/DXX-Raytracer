name: CMake

on:
  push:
    branches: [ "master" , "develop" ]
  pull_request:
    branches: [ "master" , "develop" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    
    strategy:
      matrix:
        preset: [directx12-win-debug, directx12-win-release, openGL-x64-debug, openGL-x64-release]

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup MSVC Console
      uses: TheMrMilchmann/setup-msvc-dev@v2
      with:
        arch: x64

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake --preset ${{matrix.preset}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/out/build/${{matrix.preset}}

    #- name: Test
    #  working-directory: ${{github.workspace}}/../out/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
